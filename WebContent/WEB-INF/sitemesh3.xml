<?xml version="1.0" encoding="UTF-8"?>
<sitemesh>

	<!--默认情况下，
        sitemesh 只对 HTTP 响应头中 Content-Type 为 text/html 的类型进行拦截和装饰，
        我们可以添加更多的 mime 类型
  <mime-type>text/html</mime-type>
  <mime-type>application/vnd.wap.xhtml+xml</mime-type>
  <mime-type>application/xhtml+xml</mime-type>
  -->
  
  <!-- 默认装饰器，当下面的路径都不匹配时，启用该装饰器进行装饰 -->
  <mapping decorator="/page/template.jsp"/>
  
  <!-- 对不同的路径，启用不同的装饰器 -->
  <!-- 指明满足“/demo/*”的页面，将被“/WEB-INF/views/decorators/decorator.html”所装饰 -->
  <mapping path="/demo/*" decorator="/WEB-INF/sitemesh/decorators/demo_template.html" />

 <!-- 对同一路径，启用多个装饰器 
  <mapping>
    <path>/articles/*</path>
    <decorator>/decorators/article.html</decorator>
    <decorator>/decorators/two-page-layout.html</decorator>
    <decorator>/decorators/common.html</decorator>
  </mapping>
  -->
  
   <!-- 排除，不进行装饰的路径 -->
   <!-- 指明满足“/exclude.jsp*”的页面，将被排除，不被装饰 -->
   <mapping path="/exclude.jsp*" exclue="true" />
   <mapping path="/bower_components/*" exclue="true" />
   <mapping path="/dist/*" exclue="true" />
   <!-- 自定义 tag 规则 
  <content-processor>
    <tag-rule-bundle class="com.something.CssCompressingBundle" />
    <tag-rule-bundle class="com.something.LinkRewritingBundle"/>
  </content-processor>
  -->
</sitemesh>